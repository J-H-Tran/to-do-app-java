logging:
  level:
    root: INFO
    org:
      springframework:
        security: DEBUG
  file:
    name: logs/logs.txt
    path: logs

server:
  # Https port
  port: 8443
  ssl:
    enabled: true
    key-store-type: JKS
    key-store: src/main/resources/ode-https.jks
    key-store-password: password
    key-password: password
    key-alias: ode-https
  # Http port, redirect to https via configuration
  http:
    port: 8080
  # Exclude stack trace in error response
  error:
    include-stacktrace: never

spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/todo_db
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      pool-name: HikariPool-1
      maximum-pool-size: 20
      minimum-idle: 5
      auto-commit: true
      connection-timeout: 30000
      idle-timeout: 60000
      max-lifetime: 1800000
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    open-in-view: false
    properties:
      hibernate:
        transaction:
          jta:
            platform: org.springframework.transaction.jta.JtaTransactionManager
  # Java Send Mail Spring dependency via Google smtp protocol with app generated password
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  web:
    cors:
      allowed-origins: "*"
      allowed-methods: "*"
      allowed-headers: "*"
      allow-credentials: true
  security:
    user:
      name: ${SECURITY_USER_NAME}
      password: ${SECURITY_PASSWORD}
  # Import .env file for properties values in src/main/resources
  config:
    import: "optional:classpath:.env[.properties]"

# OpenAPI spring docs (Swagger)
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html

# Insert first user to PostgreSQL DB username and password fields
app:
  first-user:
    name: ${FIRST_USER_NAME}
    password: ${FIRST_USER_PASSWORD}

# Old implementation of Spring Security JWT Authentication config
security:
  jwt:
    secret: ${JWT_SECRET}
    expiration-time: 3600

# Ifte implementation of Spring Security JWT Authentication config
application:
  security:
    jwt:
      secret-key: ${JWT_SECRET}
      access-token-expiration: 3600
      refresh-token-expiration: 7200